
# ---------------------------------------------------------------
#### Definitions for generic unix environment ###################
#    (gcc compiler, mpicxx mpi wrapper)
#
# The definitions given below work for systems in which:
#
#   - All header files and libraries are in standard locations.
#   - The command g++ is used to invoke the C++ compiler
#   - A compiler wrapper script named "mpicxx" is used for MPI code
#   - Compiler options are compatible with those for the gcc compiler
#
# These definitions work on Mac OSX for serial code, for which 
# g++ invokes the clang compiler, and for MPI code with some MPI
# libraries.
#
# ---------------------------------------------------------------
# General definitions

# Path to search for header files (must include SRC_DIR)
INCLUDES= -I$(SRC_DIR)

# Compiler option to specify ANSI C++ standard
ifdef UTIL_CXX11
   CXX_STD = --std=c++11
else
   CXX_STD = --std=c++98
endif

# ---------------------------------------------------------------
# Compiler and options used for serial programs 

# Command to invoke C++ compiler for serial (non-MPI) code
CXX_SER=g++

# Flags passed to compiler when debugging is enabled
CXXFLAGS_SER_DEBUG= -Wall $(CXX_STD)

# Flags passed to compiler when debugging is disabled (production code)
CXXFLAGS_SER_FAST= -Wall $(CXX_STD) -O3 -ffast-math -Winline

# Compiler flags used in unit tests
TESTFLAGS= -Wall $(CXX_STD)

# ---------------------------------------------------------------
# Compiler, options and execution command for parallel programs 

# Command to invoke the C++ compiler for compiling MPI code.
# Note: This is often name of a wrapper script provided by the 
# MPI library implementation
CXX_PAR=mpicxx

# Flags passed to compiler when debugging is enabled
CXXFLAGS_PAR_DEBUG= -Wall $(CXX_STD)

# Flags passed to compiler when debugging is disabled
CXXFLAGS_PAR_FAST= -Wall $(CXX_STD) -O3 -ffast-math -Winline

# MPI execution command (followed by integer number of processors)
MPIRUN=mpirun -np

# ---------------------------------------------------------------
# Linker / Loader 

# Flags passed to compiler for linking and loading
LDFLAGS=

# ---------------------------------------------------------------
# Archiver

# Library archiver command (for creating static libraries)
AR=ar

# Flags (command line options) passed to archiver
ARFLAGS=rcs

