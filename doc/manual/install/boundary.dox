/*! \page install_boundary_page 2.10 Periodic Unit Cell Type

\ref install_configure_page (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref install_doc_page (Next) 
<BR>

The choice of lattice system for the periodic unit cell (i.e., cubic, tetragonal, or orthorombic) is defined in simpatico by a C++ typedef named Simp::Boundary.  This typedef is defined in the file src/simp/boundary/Boundary.h. By default, the typedef Simp::Boundary is defined to be a synonym for the class Simp::OrthorhombicBoundary, which defines a unit cell with three orthogonal axes of arbitrary length. Throughout the source code, however, the class that represents the periodic boundary conditions is referred to only via the typedef Simp::Boundary, rather than by an explict class name, such as Simp::OrthorhombicBoundary.  This makes it possible for users change the type of unit cell type at compile time by changing this typedef to refer to, for example, Simp::MonoclinicBoundary, and recompiling the program. 

The use of a typedef to specify the class used to define boundary conditions means that users can change the choice of the type of boundary conditions at compile time, but not at run time. The use of a polymorphic class with virtual functions would have been a more flexible solution, which would have allowed the choice of an appropriate subclass at run time.  The use of a typedef was chosen over a polymorphic class for boundary conditions because of concerns about efficiency.  The Boundary class provides methods that calculate separations using the minimum image convention, which are called repeatedly in the innermost loops of both MD and MC simulations. The use of a polymorphic class with virtual functions would prevent inlining of the minimum image separation calculations. A typedef was chosen to allow maximum opportunities for optimization of these inner loops, and because the use of an orthorhombic boundary is expected to be sufficiently flexible for most applications.

 
<BR>
\ref install_configure_page (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref install_page   (Up) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref install_doc_page (Next) 
*/
