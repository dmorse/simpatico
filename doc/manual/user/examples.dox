/*! \page user_examples_page 3.5 Examples

\ref user_cfgfile_page  (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref user_analysis_page (Next)
<BR>

A set of examples of input files for simpatico simulations are provided in a separate repository on github. Examining and running these examples is the easiest way to become familiar with the program. The examples are entirely separate from the simpatico source code and can be installed anywhere within the users file system. To obtain the examples, changed directory (cd) to the directory that you wish to contain the simpatico exampled directory and use a git client to clone the repository uby entering
\code
   git clone https://github.com/dmorse/simpatico-examples.git
\endcode
to the https protocol, or 
\code
   git clone git@github.com/dmorse/simpatico-examples.git
\endcode
to use the ssh protocol. This will create a new directory containing the examples, which will refer to in what follows as the examples root directory. This directory is entirely self-contained, and may be moved or renamed after it is created with no ill effects. 

\section examples_subdirectories_sec Examples Directory Tree

Subdirectories of the examples root directory contain different types of examples that use different features of simpatico.  Some directories contain examples that are designed to work with versions of the code enabled or disabled by preprocessor macros.  The CONTENTS file in the examples root directory describes the examples in different subdirectories, and explains which features must be enabled or disabled at compile time run the examples in each subdirectory.  The examples in the atomic/, dimer/, homopolymer/, blend/ and diblock/ subdirectories are designed to work with the default versions of the code, which contains no angle, dihedral or external potentials.  Many subdirectories also contain README files that explain their contents in greater detail.  Subdirectories that contain similar examples designed for use with mcSim, mdSim and ddSim are often labelled mc/, md/ and dd/, respectively.

\section examples_layout_sec Typical File Layout

The input files for each example are in a separate directory.  In the simplest examples, the parameter file is named "param" and the command file is named "commands". In some molecular dynamics examples, the directory may contain two or more parameter file named param.nve, param.nvt, or param.npt that can be used to run examples in NVE, NVT or NPT ensembles. The file commands.rst, if present, is command script that can be used to restart and extend a simulation. Most examples contain a README file that explains details of usage for the example in that directory.

The directory structure for the simplest example directories contains the following set of files and subdirectories:
\code

    param
    commands
    commands.rst
    in/
       config
    out/
       (output files)

\endcode
Here, in/config is the input configuration file that is used to initialize the simulation. 

All of the output files except restart files are written to a subdirectory out/ of the directory containing the example.  Most of the files that are created in the out/ directory are created by analyzers that are declared in the parameter file. The parameter file required for this directory structure would define inputPrefix = in/ and outputPrefix = out/.

When two or more examples use the same input configuration file, the input configuration file may instead be in a subdirectory named in/ of the common parent directory of the directories that contain these examples.

\section examples_usage_sec Usage

To run a simple MC example simulation with the above directory structure, one must cd to the main directory for the example (the directory that contains the parameter and command files) and issue the command 
\code
    > mcSim < param
\endcode
to send the log output to the screen, or 
\code
    > mcSim < param > log &
\endcode
to run the MC example in the background and send this output to a file named "log".  Among the output files that will be created in the out/ directory is a configuration file that contains the final system configuration. This is usually named out/config.

The above directions assume that the users PATH shell variable has been set to include the directory that contains the mcSim (or mdSim) executable file.

\section examples_scripts_sec Scripts

Some example directories contain an executable bash script named "clean", and some also contain an script named "run". Executing the "run" file (if any), by typing
\code
   > ./run
\endcode
from within the example directory, will generally run a simulation and then restart the simulation, placing the outputs of the original run and restarted simulation in different directory. Executing the "clean" script, by typing
\code
   > ./clean
\endcode
will remove any files that were created by a previous run. Note the dot and backslash "./" before the name of the script names "run" and "clean" in the above examples. This represents the name of the current directory, is necessary to allow the shell to find the script if the current directory is not in the command search PATH. 


<BR>
\ref user_cfgfile_page (Prev) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref user_page (Up) &nbsp; &nbsp; &nbsp; &nbsp; 
\ref user_analysis_page (Next)

*/
