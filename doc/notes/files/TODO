For configuration files:

   1) For reading of configuration files, allow Species block to be
   optional in McMd programs, allow allocation to be deferred until 
   reading of the configuration file or the preamble of the trajectory 
   file that contains species information.

For trajectory files:

   1) Write SmpTrajectoryWriter class for DdMd.

   2) Write Smp trajectory file reader and writer classes for McMd.

   In trajectory reading in McMd, initially use allocation of all species
   during reading of the parameter file, and check consistency with 
   information in the SPECIES block of the trajectory file, if any.
   When deferred allocation is enabled, allow deferred allocation.
   `
For topology / species structure file, if any:

   Proposal: Topology file format is identical to that used in SPECIES 
   block of a configuration file. Alternative: It could be the entire
   header of a trajectory file. Questions: Where is atom type 
   information, and can it handle non-molecular systems using [BOND], 
   [ANGLE] etc. 

Force field file:

   Consider creating another ForceField file format to allow 
   communication of potential energy parameters and atom labelling 
   schemes between programs.

   The force field would have to contain names of the styles used
   for each type of interaction.

   Provide mechanism for McMd and DdMd programs to read in the 
   force field before reading in remaining parameters of the 
   potential energy, and then use the stored force field information
   to initialize parameters.

   Create or reuse a standard container for passing parameters for 
   a bond, etc. to a potential or interaction class. The information
   is just an array of numbers, so it could use an existing array 
   type or a new class. The potential problems are when a style
   requires information that is common to all group type Ids and
   is not contained in the name, or when it requires per groupId
   information that is not naturally encoded as a real number.
    
