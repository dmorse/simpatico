/*
* Simpatico - Simulation Package for Polymeric and Molecular Liquids
*
* Copyright 2010 - 2017, The Regents of the University of Minnesota
* Distributed under the terms of the GNU General Public License.
*/

#include "TrajectoryReaderFactory.h"  

// Subclasses of TrajectoryReader 
#include "LammpsDumpReader.h"
#include "DdMdTrajectoryReader.h"

namespace MdPp
{

   using namespace Util;

   /*
   * Constructor
   */
   TrajectoryReaderFactory::TrajectoryReaderFactory(Configuration& configuration)
    : configurationPtr_(&configuration)
   {}

   /* 
   * Return a pointer to a instance of TrajectoryReader subclass className.
   */
   TrajectoryReader* TrajectoryReaderFactory::factory(const std::string &className) const
   {
      TrajectoryReader *ptr = 0;

      // Try subfactories first.
      ptr = trySubfactories(className);
      if (ptr) return ptr;

      if (className == "LammpsDumpReader") {
         ptr = new LammpsDumpReader(*configurationPtr_);
      } else 
      if (className == "DdMdTrajectoryReader") {
         ptr = new DdMdTrajectoryReader(*configurationPtr_);
      } 
 
      return ptr;
   }

}
