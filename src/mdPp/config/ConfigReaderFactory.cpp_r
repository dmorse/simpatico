/*
* Simpatico - Simulation Package for Polymeric and Molecular Liquids
*
* Copyright 2010 - 2017, The Regents of the University of Minnesota
* Distributed under the terms of the GNU General Public License.
*/

#include "ConfigReaderFactory.h"  

// Subclasses of ConfigReader 
#include "DdMdConfigReader.h"
#include "SmpConfigReader.h"
#include "HoomdConfigReader.h"

namespace MdPp
{

   using namespace Util;

   /*
   * Constructor
   */
   ConfigReaderFactory::ConfigReaderFactory(Configuration& configuration)
    : configurationPtr_(&configuration)
   {}

   /* 
   * Return a pointer to a instance of ConfigReader subclass className.
   */
   ConfigReader* ConfigReaderFactory::factory(const std::string &className) const
   {
      ConfigReader *ptr = 0;

      // Try subfactories first.
      ptr = trySubfactories(className);
      if (ptr) return ptr;

      if (className == "DdMdConfigReader") {
         ptr = new DdMdConfigReader(*configurationPtr_);
      } else 
      if (className == "DdMdConfigReader_Molecule") {
         bool hasMolecules = true;
         ptr = new DdMdConfigReader(*configurationPtr_, hasMolecules);
      } else 
      if (className == "SmpConfigReader") {
         ptr = new SmpConfigReader(*configurationPtr_);
      } else 
      if (className == "HoomdConfigReader") {
         ptr = new HoomdConfigReader(*configurationPtr_);
      }
 
      return ptr;
   }

}
