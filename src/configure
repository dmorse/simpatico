#!/bin/bash

#-----------------------------------------------------------------------
# Name: configure
#
# Purpose: Sets macros enable or disable features prior to compiling.
#
# This script should be called prior to compiling in order to enable or
# disable particular compile time features. See the usage examples at the 
# bottom of this documentation block. This version of the script must be
# called from the root of the build directory tree in which a corresponding
# version of the code will built. It should thus be called from the
# bld/serial directory for standard out-of-source build of serial 
# programs (without MPI), from bld/parallel for a standard out-of-source 
# build with MPI, or from src/ for an in source build. Each of these build 
# directories contains a copy of this script.  Invoking the configure script 
# in a specific build directory only affects code that is built in that
# directory.
#
# The configure script works by editing the config.mk makefile fragments 
# in the build directory from which it is called. These files control
# which preprocessor macros are passed to the compiler for code compiled 
# in that build directory.
#
# Synopsis:
#
#      ./configure [options]
#
# Call "./configure -h" to print a full list of command line options.
#-----------------------------------------------------------------------
while getopts "m:g:p:b:a:d:e:s:l:f:r:u:k:c:qh" opt; do

  if [ -n "$MACRO_ON" ]; then 
    MACRO_ON=""
  fi
  if [ -n "$MACRO_OFF" ]; then 
    MACRO_OFF=""
  fi
  if [ -n "$FILE" ]; then 
    FILE=""
  fi
  
  case $opt in
    m)
      MACRO_ON=UTIL_MPI
      VALUE=1
      FILE=config.mk
      ;;
    g)
      MACRO_ON=UTIL_DEBUG
      VALUE=1
      FILE=config.mk
      ;;
    p)
      MACRO_OFF=SIMP_NOPAIR
      VALUE=1
      FILE=simp/config.mk
      ;;
    b)
      MACRO_ON=SIMP_BOND
      VALUE=1
      FILE=simp/config.mk
      ;;
    a)
      MACRO_ON=SIMP_ANGLE
      VALUE=1
      FILE=simp/config.mk
      ;;
    d)
      MACRO_ON=SIMP_DIHEDRAL
      VALUE=1
      FILE=simp/config.mk
      ;;
    c)
      MACRO_ON=SIMP_COULOMB
      VALUE=1
      FILE=simp/config.mk
      ;;
    e)
      MACRO_ON=SIMP_EXTERNAL
      VALUE=1
      FILE=simp/config.mk
      ;;
    s)
      MACRO_ON=SIMP_SPECIAL
      VALUE=1
      FILE=simp/config.mk
      ;;
    l)
      MACRO_ON=MCMD_LINK
      VALUE=1
      FILE=mcMd/config.mk
      ;;
    f)
      MACRO_ON=MCMD_PERTURB
      VALUE=1
      FILE=mcMd/config.mk
      ;;
    r)
      MACRO_ON=MCMD_SHIFT
      VALUE=1
      FILE=mcMd/config.mk
      ;;
    u)
      MACRO_ON=DDMD_MODIFIERS
      VALUE=1
      FILE=ddMd/config.mk
      ;;
    k)
      case $OPTARG in
      0)  # Disable (comment out) the definition of MAKEDEP
        if [ `grep "^ *MAKEDEP" config.mk` ]; then
           echo "Disabling MAKEDEP in file config.mk" >&2
           sed "s/^ *MAKEDEP/#MAKEDEP/" config.mk > temp
           cp temp config.mk
           rm temp
        else
           echo "MAKEDEP already disabled in file config.mk" >&2
        fi
        ;;
      1) # Enable (uncomment) the definition of MAKEDEP
        if [ `grep "^ *MAKEDEP" config.mk` ]; then
           echo "MAKEDEP already enabled in file config.mk" >&2
        else
           echo "Enabling MAKEDEP in file config.mk" >&2
           sed "s/^ *# *MAKEDEP/MAKEDEP/" config.mk > temp
           cp temp config.mk
           rm temp
        fi
        ;;
      esac
      ;;
    q)
      if [ `grep "^ *UTIL_MPI *= *1" config.mk` ]; then
         echo "-m  ON  - MPI" >&2
         MPI=1
      else
         echo "-m  OFF - MPI" >&2
         MPI=
      fi
      if [ `grep "^ *UTIL_DEBUG *= *1" config.mk` ]; then
         echo "-g  ON  - debugging" >&2
      else
         echo "-g  OFF - debugging" >&2
      fi
      if [ `grep "^ *SIMP_NOPAIR *= *1" simp/config.mk` ]; then
         echo "-p  OFF - pair potential" >&2
      else
         echo "-p  ON  - pair potential" >&2
      fi
      if [ `grep "^ *SIMP_BOND *= *1" simp/config.mk` ]; then
         echo "-b  ON  - bond potential" >&2
      else
         echo "-b  OFF - bond potential" >&2
      fi
      if [ `grep "^ *SIMP_ANGLE *= *1" simp/config.mk` ]; then
         echo "-a  ON  - angle potential" >&2
      else
         echo "-a  OFF - angle potential" >&2
      fi
      if [ `grep "^ *SIMP_DIHEDRAL *= *1" simp/config.mk` ]; then
         echo "-d  ON  - dihedral potential" >&2
      else
         echo "-d  OFF - dihedral potential" >&2
      fi
      if [ `grep "^ *SIMP_COULOMB *= *1" simp/config.mk` ]; then
         echo "-c  ON  - coulomb potential" >&2
      else
         echo "-c  OFF - coulomb potential" >&2
      fi
      if [ `grep "^ *SIMP_EXTERNAL *= *1" simp/config.mk` ]; then
         echo "-e  ON  - external potential" >&2
      else
         echo "-e  OFF - external potential" >&2
      fi
      if [ `grep "^ *SIMP_SPECIAL *= *1" simp/config.mk` ]; then
         echo "-s  ON  - special potential" >&2
      else
         echo "-s  OFF - special potential" >&2
      fi
      if [ `grep "^ *MCMD_LINK *= *1" mcMd/config.mk` ]; then
         echo "-l  ON  - McMd links (mutable bonds)" >&2
      else
         echo "-l  OFF - McMd links (mutable bonds)" >&2
      fi
      if [ `grep "^ *MCMD_SHIFT *= *1" mcMd/config.mk` ]; then
         echo "-r  ON  - McMd shift" >&2
      else
         echo "-r  OFF - McMd shift" >&2
      fi
      if [ -n "$MPI" ]; then
         if [ `grep "^ *MCMD_PERTURB *= *1" mcMd/config.mk` ]; then
            echo "-f  ON  - McMd free energy perturbation" >&2
         else
            echo "-f  OFF - McMd free energy perturbation" >&2
         fi
      fi
      if [ `grep "^ *DDMD_MODIFIERS *= *1" ddMd/config.mk` ]; then
         echo "-u  ON  - DdMd modifiers" >&2
      else
         echo "-u  OFF - DdMd modifiers" >&2
      fi
      if [ `grep "^ *MAKEDEP" config.mk` ]; then
         echo "-k  ON  - automatic dependency tracking" >&2
      else
         echo "-k  OFF - automatic dependency tracking" >&2
      fi
      ;;
    h)
      echo "The configure script may be called prior to compiling to enable or"
      echo "disable specific compile time features, to query which features are"
      echo "currently set to be enabled (option -q) or to choose a compiler."
      echo "This script must be called from the directory that contains the"
      echo "script file, and only effects code built in the same directory tree."
      echo " "
      echo "Command Line Options:"
      echo "-h           help: prints explanation of options (this command)"
      echo "-q           query: lists options that are enabled / disabled."
      echo " "
      echo "Each of the following options enables or disables a feature by"
      echo "defining or undefining a corresponding preprocessor macro. Each"
      echo "such option echo takes 0 or 1 as a required argument, using 1 to"
      echo "enable a feature or 0 to disable one." 
      echo " "
      echo "-m (0|1)   mpi parallelization         (undefines/defines UTIL_MPI)"
      echo "-g (0|1)   debugging                   (undefines/defines UTIL_DEBUG)"
      echo "-p (0|1)   pair potentials             (defines/undefines SIMP_NOPAIR)"
      echo "-b (0|1)   bond potentials             (undefines/defines SIMP_BOND)"
      echo "-a (0|1)   angle potentials            (undefines/defines SIMP_ANGLE)"
      echo "-d (0|1)   dihedral potentials         (undefines/defines SIMP_DIHEDRAL)"
      echo "-c (0|1)   coulomb potentials          (undefines/defines SIMP_COULOMB)"
      echo "-e (0|1)   external potentials         (undefines/defines SIMP_EXTERNAL)"
      echo "-l (0|1)   McMd links (mutable bonds)  (undefines/defines MCMD_LINK)"
      echo "-r (0|1)   McMd shift                  (undefines/defines MCMD_SHIFT)"
      echo "-f (0|1)   McMd perturbation           (undefines/defines MCMD_PERTURB)"
      echo "-u (0|1)   DdMd modifiers              (undefines/defines DDMD_MODIFIERS)"
      echo "-k (0|1)   dependency generation       (undefines/defines MAKEDEP)"
      echo " "
      echo "Examples:"
      echo " "
      echo "To query which features are currently set to be enabled:"
      echo ">  ./configure -q"
      echo "To disable debugging and enable angle and dihedral potentials:"
      echo ">  ./configure -g0 -a1 -d1"
      echo "  "
      ;;
    esac


  if [ -n "$MACRO_ON" ]; then
    
    case $OPTARG in
    0)  # Disable (comment out) the macro=1 definition
      if [ `grep "^ *$MACRO_ON *= *1" "$FILE"` ]; then
         echo "Disabling $MACRO_ON in file $FILE" >&2
         sed "s/$MACRO_ON *=.*$/$MACRO_ON=1/" "$FILE" > temp
         sed "s/^ *$MACRO_ON=/#$MACRO_ON=/" temp > "$FILE"
         rm temp
      else
         echo "$MACRO_ON already disabled in file $FILE" >&2
      fi
      ;;
    1) # Enable (uncomment) the macro=1 definition
      if [ `grep "^ *$MACRO_ON *= *1" "$FILE"` ]; then
         echo "$MACRO_ON already enabled in file $FILE" >&2
      else
         echo "Enabling $MACRO_ON in file $FILE" >&2
         sed "s/$MACRO_ON *=.*$/$MACRO_ON=1/" "$FILE" > temp
         sed "s/^ *# *$MACRO_ON=/$MACRO_ON=/" temp > "$FILE"
         rm temp
      fi
      ;;
    esac
  fi

  if [ -n "$MACRO_OFF" ]; then
    
    case $OPTARG in
    0) # Disable feature by uncommenting the MACRO_OFF=1 definition
      if [ `grep "^ *$MACRO_OFF *= *1" "$FILE"` ]; then
         echo "$MACRO_OFF already defined in file $FILE" >&2
      else
         echo "Disabling feature by defining $MACRO_OFF in file $FILE" >&2
         sed "s/$MACRO_OFF *=.*$/$MACRO_OFF=1/" "$FILE" > temp
         sed "s/^ *# *$MACRO_OFF=/$MACRO_OFF=/" temp > "$FILE"
         rm temp
      fi
      ;;
    1)  # Enable feature by commenting out the MACRO_OFF=1 definition
      if [ `grep "^ *$MACRO_OFF *= *1" "$FILE"` ]; then
         echo "Enabling feature by undefining $MACRO_OFF in file $FILE" >&2
         sed "s/$MACRO_OFF *=.*$/$MACRO_OFF=1/" "$FILE" > temp
         sed "s/^ *$MACRO_OFF=/#$MACRO_OFF=/" temp > "$FILE"
         rm temp
      else
         echo "$MACRO_OFF already undefined in file $FILE" >&2
      fi
      ;;
    esac
  fi

done

