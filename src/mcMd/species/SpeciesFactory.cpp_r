/*
* Simpatico - Simulation Package for Polymeric and Molecular Liquids
*
* Copyright 2010 - 2017, The Regents of the University of Minnesota
* Distributed under the terms of the GNU General Public License.
*/

#include "SpeciesFactory.h"  

// Subclasses of Species 
#include <simp/species/Point.h>
#include <simp/species/Homopolymer.h>
#include <simp/species/Diblock.h>
#include <simp/species/Multiblock.h>
#include <simp/species/HomoRing.h>
#include <mcMd/species/HomopolymerSG.h>
#include <mcMd/species/LinearSG.h>

namespace McMd
{

   using namespace Util;
   using namespace Simp;

   /* 
   * Return a pointer to a instance of Species subclass speciesName.
   */
   Species* SpeciesFactory::factory(const std::string &className) const
   {
      Species *ptr = 0;

      ptr = trySubfactories(className);
      if (ptr) return ptr;     

      // Try explicit class names
      if (className == "Species") {
         ptr = new Species();
      } else
      if (className == "Point") {
         ptr = new Point();
      }

      #ifdef SIMP_BOND 
      else
      if (className == "Homopolymer") {
         ptr = new Homopolymer();
      } else
      if (className == "Diblock") {
         ptr = new Diblock();
      } else
      if (className == "Multiblock") {
         ptr = new Multiblock();
      } else
      if (className == "HomoRing") {
         ptr = new HomoRing();
      } else 
      if (className == "HomopolymerSG") {
         ptr = new HomopolymerSG();
      } else 
      if (className == "LinearSG") {
         ptr = new LinearSG();
      } 
      #endif

      return ptr;
   }

}
