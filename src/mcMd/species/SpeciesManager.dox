namespace Simp
{

/*! \page simp_species_SpeciesManager_page  SpeciesManager

\section simp_species_SpeciesManager_synopsis_sec Synopsis

An SpeciesManager is a container for any number of species objects 
(i.e., of instances of subclasses of Simp::Species), each of which
represents a species within a mixture. 

\sa Simp::SpeciesManager   "Class Reference for Simp::SpeciesManager"
\sa \ref user_species_page "User documentation for subclasses of Species"

\section simp_species_SpeciesManager_param_sec Parameter File Format

The parameter file format for an SpeciesManager contains a series of any 
number of parameter file blocks for species objects, with one space
between species class blocks. Below is an example showing a parameter
block for an SpeciesManager with two objects that are instances of 
fictitious species classes named Species1 and Species2, in which 
ellipses are used to represent the body of the parameter file format 
for each species.

\code
  SpeciesManager{

    Species1{
        ....
    }

    Species2{
        ....
    }

  }
\endcode
The AnalzyerManager parameter file block may contain any number of such
blocks, or may be empty.  

When an SpeciesManager parameter block is read, the string in the opening 
line of each species subblock, without the opening bracket, is compared 
to a list of species classes. This list is defined by the implemenation 
of the associated SpeciesFactory class. If the name is recognized, an 
object of the specified class is created and the body of its parameter 
file block is read by calling the readParameters() member function of
the new object. If the name is not recognized, an Exception is thrown
and execution halts. 

User documention for available species classes, including parameter file
formats, is available \ref user_species_page "here"
*/

}
